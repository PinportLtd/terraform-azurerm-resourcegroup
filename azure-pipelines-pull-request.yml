trigger: none

pr:
  branches:
   include:
     - main
     - master

resources:
  repositories:
    - repository: templates
      type: git
      name: ADOTemplates/PLTemplates

variables:
  - name: tag
    value: '$(Build.BuildId)'
  - name: Repository
    value: 'golangtesting'
  - name: dockerfile
    value: '$(Build.SourcesDirectory)/Dockerfile'
  - group: Allpipes

pool:
  vmImage: 'ubuntu-latest'
  
stages:
- stage: CodeCoverage
  displayName: Analyse Code
  jobs:
  - job: CodeCoverage
    displayName: Analyse code for potential errors
    steps:
      - template: 'Terraform-modules/CodeCoverage.yml@templates'
        parameters:
          SonarCloudOrganization: $(SonarCloudOrganization)
          cliProjectKey: $(cliProjectKey)
          cliProjectName: $(cliProjectName)
        
- stage: Build
  displayName: Build image run container tests
  jobs:  
  - job: Build
    displayName: Build
    pool:
      vmImage: 'ubuntu-latest'
    steps:
      - template: 'Terraform-modules/Build.yml@templates'
        parameters:
          modulename: $(modulename)
          containerRegistryServiceConnectionName: $(containerRegistryServiceConnectionName)
          dockerfile: $(dockerfile)
          tag: $(tag)
          ARM_SUBSCRIPTION_ID: $(ARM_SUBSCRIPTION_ID)
          ARM_CLIENT_ID: $(ARM_CLIENT_ID)
          clientsecret: $(clientsecret)
          ARM_TENANT_ID: $(ARM_TENANT_ID)
          azurecontainerRegistry: $(azurecontainerRegistry)
  
- stage: Report
  displayName: ReportOn
  jobs:  
  - job: RunReports
    displayName: Run Reports
    pool:
      vmImage: 'ubuntu-latest'
    steps:
      - template: 'Terraform-modules/Report.yml@templates'

